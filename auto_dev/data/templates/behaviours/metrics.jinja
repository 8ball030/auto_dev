# -*- coding: utf-8 -*-
# ------------------------------------------------------------------------------
#
#   Copyright 2023 {{author}}
#   Copyright 2023 valory-xyz
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
# ------------------------------------------------------------------------------

"""This package contains a behaviour that autogenerated from the protocol `{{protocol_name}}`."""

from packages.eightballer.skills.prometheus.behaviours import PrometheusBehaviour as BaseMetric



class {{class_name}}MetricGenerator:
    """This class generates metrics for the {{protocol_name}} protocol."""

    def __init__(self, **kwargs):
        """Initialize the metric generator."""
        self.kwargs = kwargs

    def generate_metrics(self):
        """Generate metrics for the {{protocol_name}} protocol."""
        metrics = []
        {% for class in speech_acts %}metrics.append(self.generate_{{class}}(**self.kwargs))
        {% endfor %}
        return metrics

    {% for method in speech_acts%}
    def generate_{{method}}(self,{% for arg in speech_acts[method]%}
                            {{arg}},{% endfor %}
    ):
        """This method generates a {{method}} metric."""
    {% endfor %}
