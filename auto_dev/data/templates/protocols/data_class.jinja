class BaseCustomEncoder(BaseModel):

    @staticmethod
    def encode(ps_response_protobuf_object, ps_response_object) -> None:
        """
        Encode an instance of this class into the protocol buffer object.

        The protocol buffer object in the ps_response_protobuf_object argument is matched with the instance of this
        class in the 'ps_response_object' argument.

        :param ps_response_protobuf_object: the protocol buffer object whose type corresponds with this class.
        :param ps_response_object: an instance of this class to be encoded in the protocol buffer object.
        """
        for key, value in ps_response_object.dict().items():
            setattr(ps_response_protobuf_object, key, value)

    @classmethod
    def decode(cls, ps_response_protobuf_object) -> 'PsResponse':
        """
        Decode a protocol buffer object that corresponds with this class into an instance of this class.

        A new instance of this class is created that matches the protocol buffer object in the
        'ps_response_protobuf_object' argument.

        :param ps_response_protobuf_object: the protocol buffer object whose type corresponds with this class.
        :return: A new instance of this class that matches the protocol buffer object in the
        'ps_response_protobuf_object' argument.
        """
        return cls(**ps_response_protobuf_object.__dict__)

    def __eq__(self, other):
        return self.dict() == other.dict()
        
{% for class in classes %}
class {{class.name}}(BaseCustomEncoder):
    """This class represents an instance of {{class.name}}."""
    {% for field in class.fields %}
    {{field.name}}: {{field.type}}{% endfor %}
{% endfor %}

