{{ header }}

"""Models for the {{ snake_name }} protocol performatives to facilitate hypothesis strategy generation."""

from pydantic import BaseModel, conint, confloat

from packages.{{ author }}.protocols.{{ snake_name }}.tests.primitive_strategies import (
    Int32,
    Double,
)
from packages.{{ author }}.protocols.{{ snake_name }}.custom_types import (
    {%- for custom_type in custom_types %}
    {{ custom_type }},
    {%- endfor %}
)

{# Define models for the performatives #}
{%- for performative, fields in performative_types.items() %}
class {{ snake_to_camel(performative) }}(BaseModel):
    """Model for the `{{ performative|upper }}` initial speech act performative."""
    {%- for field_name, field_type in fields.items() %}
    {{ field_name }}: {{ field_type }}
    {%- endfor %}

{% endfor %}

for cls in BaseModel.__subclasses__():
    cls.model_rebuild()
